#!/bin/bash
#
# Fedora-native mktree backend using DNF to bootstrap a minimal OS tree with
# the RPM runtime and test dependencies but no stock RPM preinstalled.
# Lightweight snapshotting built into the test-suite is used for isolation.

source ./mktree.common

# Obtain source dir (or common git-worktree(1) if one exists)
git() { command git -C "@CMAKE_SOURCE_DIR@" "$@"; }
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    SOURCE_DIR=$(git rev-parse --path-format=absolute --git-common-dir |
                 xargs dirname)
else
    SOURCE_DIR=@CMAKE_SOURCE_DIR@
fi

# Build-agnostic dirs, prefer those in source dir
[ -d "$SOURCE_DIR/mktree.output" ] || SOURCE_DIR=$PWD
BASE_DIR=$SOURCE_DIR/mktree.output/base
CACHE_DIR=$SOURCE_DIR/mktree.cache

# Build-specific dirs
INST_DIR=$PWD/mktree.output/inst
SANDBOX_DIR=$PWD/mktree.sandbox

RPM_MACROS="
%_netsharedpath %{nil}
%__transaction_systemd_inhibit %{nil}
"

ENV_MOTD="
Welcome to RPM test environment!

This is like an interactive test with a writable \$RPMTEST
tree, but with full host integration so you can use your
native tools to inspect or modify the tree.

The shell runs in a user namespace WITHOUT filesystem
isolation so be mindful when using destructive commands.
Treat it like any other shell on your host.

The usual test commands are available, e.g.

  runroot rpm ...

DNF is configured to operate on the tree, use it simply
like this:

  dnf install ...

To factory-reset the tree, leave this shell and run:

  make reset
"

CMD=$1; shift

dnf()
{
    HOME=$CACHE_DIR command dnf \
        --installroot=$BASE_DIR \
        --releasever=@OS_VERSION@ \
        --setopt=cachedir=$CACHE_DIR/dnf \
        --setopt=keepcache=1 \
        --setopt=install_weak_deps=0 \
        --disablerepo=\* --enablerepo=fedora,updates \
        --exclude=rpm,systemd-udev "$@"
}

mount_tree()
{
    source ./atlocal
    RPMTREE=$INST_DIR:$BASE_DIR
    RPMTEST=${1:-$SANDBOX_DIR}/tree
    snapshot mount $1
}

clean_up()
{
    [ -n "$RPMTEST" ] && snapshot umount
    chmod -Rf u+rwX $BASE_DIR $SANDBOX_DIR rpmtests.dir
}

# Run CMD in a user namespace (if not root already)
if [ $(id -u) != 0 ]; then
    if [ -f /run/.toolboxenv ]; then
        # toolbox(1) support
        UNSHARE="sudo --preserve-env"
    else
        UNSHARE="unshare -r --mount --map-auto"
    fi
    $UNSHARE $0 $CMD "$@"
    exit
fi

trap clean_up EXIT

case $CMD in
    build)
        rm -rf "$INST_DIR"
        make_install $INST_DIR

        [ -d "$BASE_DIR" ] && exit 0

        mkdir -p $CACHE_DIR
        echo "$RPM_MACROS" > $CACHE_DIR/.rpmmacros

        dnf install -y \
            bash \
            binutils \
            bubblewrap \
            bzip2 \
            coreutils \
            cpio \
            curl \
            dbus-libs \
            debugedit \
            diffutils \
            elfutils-libelf \
            elfutils-libs \
            file \
            file-libs \
            findutils \
            gawk \
            gcc \
            gdb-minimal \
            glibc \
            gpg \
            grep \
            gzip \
            ima-evm-utils \
            libacl \
            libarchive \
            libcap \
            libfsverity \
            libgomp \
            libzstd \
            lua-libs \
            make \
            openssl-libs \
            patch \
            pkgconf-pkg-config \
            popt \
            python3 \
            rpm-sequoia \
            sed \
            shadow-utils \
            sqlite-libs \
            tar \
            unzip \
            util-linux-core \
            which \
            xz \
            xz-libs \
            zlib \
            zstd

        # Enable DNS resolution
        cp /etc/resolv.conf $BASE_DIR/etc/

        # Point RPM to newly created database
        echo "%_dbpath $(rpm --eval '%_dbpath')" > $BASE_DIR/root/.rpmmacros

        # Configure default shell for root user
        cp -r $BASE_DIR/{etc/skel/.,/root}
    ;;
    env)
        set -a
        mount_tree $SANDBOX_DIR

        export CACHE_DIR
        export BASE_DIR=$RPMTEST
        export -f dnf

        echo "$ENV_MOTD"
        $SHELL
        exit 0
    ;;
    shell)
        mount_tree $SANDBOX_DIR
        snapshot shell "$@"
        exit 0
    ;;
    check)
        mount_tree
        snapshot shell --tmpfs /tmp sh -c 'cd /srv && exec ./rpmtests "$@"' \
                                    rpmtests "$@"
    ;;
    reset)
        rm -rf "$SANDBOX_DIR"
    ;;
esac
